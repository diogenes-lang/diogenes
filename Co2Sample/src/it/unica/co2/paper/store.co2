
package it.unica.co2.paper

honesty Phonest Buyer Distributor

contract C {
	order? string . ( amount! int (+) abort! )
}

contract D {
	req! string . ( ok? + no? )
}

specification Pdishonest {
	tellAndWait x C .
	receive x order? v:string . (			
		tellRetract y D . (
			send y req! v . 
			receive [
				y <- ok? . send x amount! 100
				y <- no? . send x abort!
			]
			+ t . send x abort! 
		)
		: send x abort!
	)
	
}

specification Phonest {
	tellAndWait x C .
	receive x order? v:string . (
		tellRetract y D . (
			send y req! ("req:"+v) . 
			receive [
				y <- ok? . send x amount! 100
				y <- no? . send x abort!
			]
			+ t . send x abort! . receive [y <- ok? no?]
		) 
		: send x abort!
	)
}

specification Buyer {
	tellAndReturn x { order! string . ( amount? int + abort? ) } .
	send x order! "AB01234" .
	receive [ 
		x <- amount? n:int
		x <- abort?
	] 
}

specification Distributor {
	tellRetract x { req? string . ( ok! (+) no! ) } .
	receive x req? msg:string .
	if msg=="req:AB01234"
	then send x ok!
	else send x no!
}

