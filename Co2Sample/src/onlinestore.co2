system it.unica.co2.onlinestore.OnlineStore

honesty P

contract C {
	addToCart? int . C1
}

contract C1 {
	addToCart? int . C1 + checkout? . Cpay
}

contract Cpay {
	pay? string . (ok! (+) no!.Cpay (+) abort! ) + cancel?
}

process P {
	(x:session) (tell x C . ask x . do x addToCart? n:int. Padd(x,n))
}

process Padd (x:session, total:int) {
	do x addToCart? n:int . Padd(x, total+n)
	+ do x checkout? . Ppay(x, total)
}

process Ppay (x:session, amount:int) {
	do x pay? s:string . Pack(x,amount) + do x cancel?
}

process Pack (x:session, amount:int) {
	if amount<100 then do x ok! else do x no!.Ppay(x,amount)
}


