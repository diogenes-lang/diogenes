/*
 * empty contract
 */
 
system contractSamples
 
contract c1{ }
contract c2{(((nil)))}

/*
 * single element
 */
 contract c3{
 	a!
 }

/*
 * simple internal sum
 */
contract c4{
	a! (+) b! (+) c!
}

/*
 * simple external sum
 */
contract c5{
	a? + b? + c?
} 

/*
 * simple recursion
 */
contract c6{
	a!. c6
}

contract c7{
	a? . c7
}

contract c8{
	a!.(a! (+) b!) (+) b!.(a? + b?) (+) c!.c?.c7
}

//contract scope {
//	a!. (
//		rec A . (
//			a!.A (+) b!. (
//				rec B. (
//					a?.A + b?.B + c?.(
//						rec C. (
//							a!.A (+) b!.B (+) c!.C 
//						)
//					)
//				)
//			)
//		)
//	) (+) b!. nil
//}
//
//contract shadows {
//	rec A. (
//		a!.A (+) b!. (
//			rec A. (	//hide the first definition
//				c!. A	//reference to the last declaration
//			)
//		)
//	)
//}

/*
 * Contracts with name
 */
contract bank {
	a? + b?
}

contract police {
 	a! (+) b!
}
 
/*
 * Reference example
 */
contract PIPPO {
	a!.nil (+) b!. police
}
 

contract CA {
	order ? int . (amount ! unit . pay ? unit (+) abort ! unit)
}

contract CI {
	reqI ! unit . (okI ? unit + abortI ? unit)
}
 