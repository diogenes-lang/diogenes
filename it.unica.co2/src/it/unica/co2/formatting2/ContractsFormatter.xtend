/*
 * generated by Xtext
 */
package it.unica.co2.formatting2;

import com.google.inject.Inject;
import it.unica.co2.contracts.AbstractNextContract;
import it.unica.co2.contracts.ContractDefinition;
import it.unica.co2.contracts.ContractGrammar;
import it.unica.co2.contracts.ExtAction;
import it.unica.co2.contracts.ExtSum;
import it.unica.co2.contracts.IntAction;
import it.unica.co2.contracts.IntSum;
import it.unica.co2.contracts.Recursion;
import it.unica.co2.services.ContractsGrammarAccess;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;

class ContractsFormatter extends AbstractFormatter2 {
	
	@Inject extension ContractsGrammarAccess

	def dispatch void format(ContractGrammar contractgrammar, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ContractDefinition contracts : contractgrammar.getContracts()) {
			format(contracts, document);
		}
	}

	def dispatch void format(ContractDefinition contractdefinition, extension IFormattableDocument document) {
		contractdefinition.regionForKeyword("contract").append[oneSpace]
		contractdefinition.regionForRuleCallTo(IDRule).surround[oneSpace]
		contractdefinition.regionForKeyword("{").append[newLine; increaseIndentation]
		format(contractdefinition.getContract(), document);
		contractdefinition.regionForKeyword("}").prepend[newLine;decreaseIndentation].append[newLines=2]
	}

	def dispatch void format(IntSum intsum, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (IntAction actions : intsum.getActions()) {
			format(actions, document);
		}
	}

	def dispatch void format(ExtSum extsum, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ExtAction actions : extsum.getActions()) {
			format(actions, document);
		}
	}

	def dispatch void format(Recursion recursion, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(recursion.getBody(), document);
	}

	def dispatch void format(IntAction intaction, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(intaction.getType(), document);
		format(intaction.getNext(), document);
	}

	def dispatch void format(ExtAction extaction, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(extaction.getType(), document);
		format(extaction.getNext(), document);
	}

	def dispatch void format(AbstractNextContract abstractnextcontract, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(abstractnextcontract.getNextContract(), document);
	}
}
