/*
 * generated by Xtext
 */
package it.unica.co2.ui.labeling

import com.google.inject.Inject
import it.unica.co2.co2.StringValue
import it.unica.co2.contracts.AbstractNextContract
import it.unica.co2.contracts.ContractDefinition
import it.unica.co2.contracts.ExtAction
import it.unica.co2.contracts.ExtSum
import it.unica.co2.contracts.IntAction
import it.unica.co2.contracts.IntSum
import it.unica.co2.contracts.IntegerType
import it.unica.co2.contracts.Recursion
import it.unica.co2.contracts.StringType
import it.unica.co2.contracts.UnitType
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class ContractsLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	def image(ContractDefinition ele) {
		'contract.png'
	}

	def image(AbstractNextContract ele) {
		if (ele.contractReference != null)
			'contract.png'
	}

	def image(IntAction ele) {
		'output.png'
	}

	def image(ExtAction ele) {
		'input.png'
	}

	def text(ContractDefinition ele) {
		if (ele.name != null)
			ele.name
		else
			'<anonymous>'
	}

	def text(IntSum ele) {
		"(+)"
	}

	def text(ExtSum ele) {
		"+"
	}

	def text(Recursion ele) {
		"rec " + ele.name
	}

	def text(IntAction ele) {
		if (ele.type != null) {
			
			if (ele.type instanceof UnitType)
				ele.actionName + "! " + "unit"
			else if (ele.type instanceof IntegerType)
				ele.actionName + "! " + "int"
			else if (ele.type instanceof StringValue)
				ele.actionName + "! " + "string"
			else
				"ERROR"
			
		} else
			ele.actionName + "! unit"
	}

	def text(ExtAction ele) {
		if (ele.type != null) {
			if (ele.type instanceof UnitType)
				ele.actionName + "? " + "unit"
			else if (ele.type instanceof IntegerType)
				ele.actionName + "? " + "int"
			else if (ele.type instanceof StringType)
				ele.actionName + "? " + "string"
			else
				"ERROR"
		} else
			ele.actionName + "? unit"
	}

	def text(AbstractNextContract ele) {
		if (ele.recursionReference != null)
			"[" + ele.recursionReference.name + "]"
		else if (ele.contractReference != null)
			"[" + ele.contractReference.name + "]"
	}
}
